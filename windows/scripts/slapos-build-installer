#! /bin/bash
#
# This script is used to build slapos installer of windows. There are 2
# scripts need to run in prior:
# 
#     slapos-cygwin-bootstrap.sh
#     
#     build-slapos.sh
#
# In this script, it will do:
# 
#    * Prepare sources
#    
#    * Make installer
#
export PATH=/usr/local/bin:/usr/bin:/usr/sbin:/sbin:/bin:$PATH
if ! source /usr/share/csih/cygwin-service-installation-helper.sh ; then
    echo "Error: Missing csih package."
    exit 1
fi

# ======================================================================
# Functions
# ======================================================================
function check_os_is_wow64()
{
  [[ $(uname) == CYGWIN_NT-*-WOW64 ]]
}
readonly -f check_os_is_wow64

function show_usage()
{
    echo "Usage:"
    echo ""
    echo "  ./slapos-build-installer"
    echo ""
}
readonly -f show_usage

# ======================================================================
# Start script
# ======================================================================
csih_inform "Starting build Slapos Windows installer ..."
echo ""

# ======================================================================
# Constants
# ======================================================================
declare -r cygwin_home=$(cygpath -a $(cygpath -w /)\\.. | sed -e "s%/$%%")
declare -r ISCC=${cygwin_home}/inno-setup/ISCC.exe

# -----------------------------------------------------------
# Start script
# -----------------------------------------------------------
while test $# -gt 0; do
    # Normalize the prefix.
    case "$1" in
    -*=*) optarg=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
    *) optarg= ;;
    esac

    case "$1" in
    -h | --help)
    show_usage
    exit 0
    *)
    show_usage
    exit 1
    ;;
    esac

    # Next please.
    shift
done

# -----------------------------------------------------------
# Prepare the sources used to build installer
# -----------------------------------------------------------
csih_inform "Preparing the sources used to build installer ..."

(rm -rf /opt/slapos/slapos.tar.gz; cd /opt ; tar czf slapos.tar.gz slapos/ ; mv slapos.tar.gz slapos/) ||
csih_error "create slapos.tar.gz failed"
csih_inform "tar package /opt/slapos/slapos.tar.gz generated"

_filename=/opt/slapos/slapos.cfg.example
wget -c http://git.erp5.org/gitweb/slapos.core.git/blob_plain/HEAD:/slapos.cfg.example -O ${_filename} ||
csih_error "download ${_filename} failed"
csih_inform "Got ${_filename}"

_filename=/opt/slapos/slapos-client.cfg.example
wget -c http://git.erp5.org/gitweb/slapos.core.git/blob_plain/HEAD:/slapos-client.cfg.example -O ${_filename} ||
csih_error "download ${_filename} failed"
csih_inform "Got ${_filename}"

(cd /opt/git/slapos.package ; git pull) ||
(cd /opt/git ; git clone -b cygwin http://git.erp5.org/repos/slapos.package.git) ||
csih_error "clone http://git.erp5.org/repos/slapos.package.git failed"
csih_inform "clone/pull http://git.erp5.org/repos/slapos.package.git OK"

if csih_is_vista ; then
    csih_inform "making babeld for vista or above ..."
    (cd /opt/git/slapos.package/windows/babeld ; WINVER=VISTA make) ||
    csih_error "make babeld failed"
else
    csih_inform "making babeld for xp ..."
    (cd /opt/git/slapos.package/windows/babeld ; WINVER=XP make) ||
    csih_error "make babeld failed"
fi

_filename=/opt/git/slapos.package/windows/scripts/regpwd.exe
[[ ! -f ${_filename} ]] &&
(cd /opt/git/slapos.package/windows/scripts ; gcc -o regpwd.exe regpwd.c) && 
csih_inform "make regpwd.exe"

_filename=~/openvpn-driver.tar.gz
if check_os_is_wow64 ; then
    _url=http://www.dashingsoft.com/products/slapos/openvpn-x64.tar.gz
else
    _url=http://www.dashingsoft.com/products/slapos/openvpn-x86.tar.gz
fi
wget -c ${_url} -O ${_filename} ||
csih_error_multi "download ${_filename} failed" "  from ${_url}"
csih_inform "Got ${_filename}"
csih_inform "  from ${_url}"

csih_inform "extracting ${_filename} ..."
(cd /opt ; tar xzf ${_filename} --no-same-owner) ||
csih_error "extract ${_filename} failed"

_filename=/opt/downloads/pyOpenSSL-0.13.tar.gz
wget -c --no-check-certificate https://pypi.python.org/packages/source/p/pyOpenSSL/pyOpenSSL-0.13.tar.gz#md5=767bca18a71178ca353dff9e10941929 -O ${_filename} ||
csih_error "download ${_filename} failed"
csih_inform "Got ${_filename}"

_filename=/opt/downloads/miniupnpc-1.8.tar.gz
wget -c http://miniupnp.free.fr/files/download.php?file=miniupnpc-1.8.tar.gz -O ${_filename} ||
csih_error "download ${_filename} failed"
csih_inform "Got ${_filename}"

csih_inform "updating re6stnet.git ..."
(cd /opt/git/re6stnet ; git pull) ||
(cd /opt/git ; git clone -b cygwin http://git.erp5.org/repos/re6stnet.git) ||
csih_error "clone/pull re6stnet.git failed"

# # Now package i686-w64-mingw32-gcc isn't installed, so ignore it in temporary
# csih_inform "building ovpn-client and ovpn-server ..."
# for _name in ovpn-client ovpn-server ; do
#     (cd /opt/git/re6stnet/re6st ; i686-w64-mingw32-gcc -o ${_name}.exe ${_name}.c ovpn-pipe.c) ||
#     csih_error "build ${_name}.exe failed"
#     csih_inform "build ${_name}.exe OK"
# done

csih_inform "creating re6stnet source package ..."
(cd /opt/git/re6stnet ; python setup.py sdist) ||
csih_error "create re6stnet source package failed"

_filename=~/images.tar.gz
wget -c http://www.dashingsoft.com/products/slapos/images.tar.gz -O ${_filename} ||
csih_error "download ${_filename} failed"
csih_inform "Got ${_filename}"

csih_inform "extracting ${_filename} ..."
(cd /opt ; tar xzf ${_filename} --no-same-owner) ||
csih_error "extract ${_filename} failed"

# This command need microsoft sdk to build, so we just copy it
_filename=/opt/git/slapos.package/windows/ipwin/ipwin/ipwin.exe
if check_os_is_wow64 ; then
    _url=http://www.dashingsoft.com/products/slapos/ipwin-x64.tar.gz
else
    _url=http://www.dashingsoft.com/products/slapos/ipwin-x86.tar.gz
fi
wget -c ${_url} -O ${_filename} ||
csih_error_multi "download ${_filename} failed" "  from ${_url}"
csih_inform "Got ${_filename}"
csih_inform "  from ${_url}"

csih_inform "Prepare the sources OK"
echo ""

# -----------------------------------------------------------
# Generate installer
# -----------------------------------------------------------
_issfile=~/slapos.iss
_installer_name=slapos-windows-all-in-one
_output_dir=$(cygpath -a -w $(cygpath -w /)\\.. | sed -e 's%\\%\\\\%g')
_source_dir=$(cygpath -a -w $(cygpath -w /)\\.. | sed -e 's%\\%\\\\%g')
_srcfile=/opt/git/slapos.package/windows/scripts/slapos-all-in-one.iss

csih_inform "Starting generate Windows installer ..."

[[ -x "$ISCC" ]] || csih_error "missing $ISCC"
csih_inform "copy ${_srcfile} to ${_issfile}"
cp ${_srcfile}  ${_issfile} || csih_error "copy failed"

csih_inform "patch ${_issfile} ..."
sed -i -e "s%^OutputBaseFilename=.*%OutputBaseFilename=${_installer_name}%" \
       -e "s%^OutputDir=.*%OutputDir=${_output_dir}%" \
       -e "s%^SourceDir=.*%SourceDir=${_source_dir}%" \
       -e "s%/etc/slapos/scripts/slapos-cygwin-bootstrap.sh%/etc/slapos/scripts/slapos-cygwin-bootstrap.sh --prefix=slaptest-%" \
    ${_issfile} || csih_error "patch failed"

csih_inform "run issc to build ${_issfile} ..."
$ISCC $(cygpath -w ${_issfile}) ||
csih_error "issc failed"

csih_inform "Generate Windows installer OK"
echo ""

# -----------------------------------------------------------
# End scirpt
# -----------------------------------------------------------
echo ""
csih_inform "Build Slapos Windows installer successfully."
echo ""

exit 0
