<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE book SYSTEM "/usr/share/sgml/docbook/xml-dtd-4.1.2/docbookx.dtd">
<book>
<title>Using SlapOS in the Windows</title>
<bookinfo> 
   <author>
      <firstname>Jondy</firstname>
      <surname>Zhao</surname>
   </author>
   <revhistory>
     <revision>
       <revnumber>0.1</revnumber>
       <date>2013-06-20</date>
       <authorinitials>Jondy Zhao - jondy.zhao@nexedi.com</authorinitials>
       <revremark>Create the document.</revremark>
     </revision>
   </revhistory>
</bookinfo>

<chapter id="ch_introduction"><title>Introduction</title>
<para>SlapOS can be described as a cloud operating system in which "everything is a process" unlike Unix in which "everything is a file". If one has to manage thousands of servers with thousands of processes, hundred different applications in multiple different releases or versions, SlapOS can help you a lot by making the whole management process well specified, automated and under control.</para>
<para>The goal of this tutorial is to teach how to use SlapOS in the windows.</para>
<!-- 
<itemizedlist>
<listitem><para>First you need register an account in the slapos.org (refer to <xref linkend="ch_register_slapos_org"/>)</para></listitem>
<listitem><para>Then install SlapOS slave node in the windows (refer to <xref linkend="ch_install_slapos"/>)</para></listitem>
<listitem><para>Finally enjoy slapos cloud in the Windows</para></listitem>
</itemizedlist>
 -->
</chapter>

<!-- 
<chapter id="ch_register_slapos_org"><title>Registering in the slapos.org</title>
<para>Then, we need to register your computer to slapos.org community Cloud. By doing so, we will obtain X509 certificate and key which are later needed for the configuration process.
<itemizedlist>
<listitem><para>Login to www.slapos.org. Go to the "My Space" area and then to the "My Servers" section. Click on the button "New Server". This button will lead you to a page where you can specify the name of your server.</para></listitem>
<listitem><para>Enter a self contained name to identify your server. Consider a name "VIFIB 19 Asus i7 for JB" rather than "My Server". This will help you find your server later on. Click on the "Add" button.</para></listitem>
<listitem><para>X509 key and certificate are generated. Certificates are not stored by slapos.org server. They will be lost if you do not save them : Do not close this web page yet as we are going to store the key and certificate in files in next step. </para>
<para>You can create 2 new files named as computer.key and computer.crt by Notepad or any editor your prefer, and save the content of certificate and key into both of files respectively.</para></listitem>
</itemizedlist>
</para>
<para>Refer to <ulink url="http://community.slapos.org/wiki/osoe-Lecture.SlapOS.Extended/developer-Running.SlapOS.on.your.computer"></ulink> in the section VIFIB Registration.</para>
</chapter>
 -->

<chapter id="ch_install_slapos"><title>Installing SlapOS node in the Windows</title>
<para>At first, we need to sign up in VIFIB community Cloud by clicking here <ulink url="https://www.slapos.org/login_form"/></para>
<para>Then download the latest slapos windows installer from <ulink url="http://www.erp5.org/dists/installer"></ulink>, the filename of windows installer look like slapos-XXX-windows-x86-all-in-one.exe or slapos-XXX-windows.exe, XXX stands for version-release information. The all-in-one installer include all the files required by slapos node, so it can run in the computer which doesn't access internat; the later will download most of packages from internet and build, so it need more time than all-in-one installer. It's recommanded to use the former installer in case of slow or unstable internet even if the size of all-in-one installer is more than 100MB, compare of the latter which size is about 2MB.</para>
<para>Double click the installer, click Next, Next ...</para>
<para>At the final wizard page, click Install.</para>
<para>Waiting for everything done.</para>
<para>If you'd like to install slapos node from sources, refer to the chapter <xref linkend="ch_generate_window_installer"/>.</para>
</chapter>

<chapter><title>Using Slapos in the Windows</title> 
<para>After SlapOS has been installed successfully, you will find program group "SlapOS" which include the following entries:
<itemizedlist>
<listitem><para>SlapOS</para></listitem>
<listitem><para>Node Runner</para></listitem>
<listitem><para>Command Console</para></listitem>
<listitem><para>Configure Node</para></listitem>
<listitem><para>User Guide</para></listitem>
</itemizedlist>
</para>
<section><title>SlapOS</title>
<para>This is used by slapos client, now it's connected to <ulink url="https://www.slapos.org"/>. Login it to enter SlapOS Cloud world.</para>
</section>
<section><title>Node Runner</title>
<para>Node Runner is a web based development tool which uses slapgrid to install and instantiate the software, and it could be used to manage your slapos slave node in your computer.</para>
<para>Refer to <ulink url="http://community.slapos.org/wiki/osoe-Lecture.SlapOS.Extended/developer-Howto.Use.SlapOS.Web.Runner.html5"/></para>
</section>
<section><title>Command Console</title>
<para>It will open a terminal, here you can run most of slapos command, 
<programlisting>
$ cd /opt/slapos
$ ls bin
bang                    slapconsole  slapgrid-sr             slapos
buildout                slapformat   slapgrid-supervisorctl  slapos-watchdog
generate-signature-key  slapgrid     slapgrid-supervisord    slapproxy
py                      slapgrid-cp  slapgrid-ur             slapproxy-query
</programlisting>
</para>
<para>Refer to <ulink url="http://git.erp5.org/gitweb/slapos.core.git/blob/HEAD:/documentation/source/slapos.usage.rst?js=1"/></para>
</section>
<section><title>Configure Node</title>
<para>It used to generate all the configure files required by slapos slave node, you need pass certificate and key files of your registered server.</para>
</section>
<section><title>User Guide</title>
<para>It just showes this documnet in the web browser.</para>
</section>
</chapter>

<!--
<chapter><title>Create slapos instance of Workpress in the Windows</title> 
<para>After SlapOS has been installed successfully, you will find program group "SlapOS" which include the following entries:
Copy our cygwin inotifyx to download-cache/dist, so buildout will find it other than pypi.
</para>
<para>The common way to release a software is to login vifib website. But we haven't integrated this software.cfg into vifib, so we verify it in the local machine. It need a patch:
<programlisting>
$ cd /opt/slapos
$ wget http://git.erp5.org/gitweb/slapos.git/blob_plain/refs/tags/cygwin:/component/slapos/slapgrid-test-local-software.patch
$ cd /opt/slapos/eggs/slapos.core-0.33.1-py2.7.egg
$ patch -p1 &lt; /opt/slapos/slapgrid-test-local-software.patch
</programlisting>
Release Wordpress:
<programlisting>
$ mkdir -p /var/slapgrid/instance
$ mkdir -p /var/slapgrid/software
$ bin/slapgrid - - only_sr http://git.erp5.org/gitweb/slapos.git/blob_plain/refs/tags/cygwin:/software/wordpress/software.cfg /etc/slapos/slapos.cfg
</programlisting>
</para>
<para>Some dlls need to rebase in order to avoid fork issue in the Cygwin. Refer to <ulink url="http://cygwin.com/faq.html"></ulink> question 4.44 or search "rebase" in this page. First, exit all Cygwin processes and stop all Cygwin services.
<programlisting>
$ net stop cfgslapos
$ ps -ef | grep python2.7
# kill all these process which start by supervisord
$ exit
</programlisting>
If you install SlapOS node by MSI package, Click Start menu, select SlapOS program group, click Run rebaseall. Otherwise, download rebase-software.bat and save it in the cygwin root path.
<programlisting>
$ cd /
$ wget http://git.erp5.org/gitweb/slapos.git/blob_plain/refs/tags/cygwin:/component/cygwin/rebase-software.bat
$ exit
</programlisting>
Double click rebase-software.bat in the windows explorer. The file should be in the directory "C:/cygwin"
</para>

<para>Create an instance:
<programlisting>
$ net start cygslapos
$ bin/slapgrid - -only_sr http://git.erp5.org/gitweb/slapos.git/blob_plain/refs/tags/cygwin:/software/wordpress/software.cfg /etc/slapos/slapos.cfg
</programlisting>
Now wordpress should work. Type "http://localhost:8080/index.php" in your browser to check it.</para>
<para>Run the following to show a demo:

$ cd /opt/slapos
$ export SLAPOS_CLIENT_CONFIGURATION=/opt/slapos/slapos-client.cfg
$ echo "  demoapp file:///opt/git/slapos/software/demoapp/software.cfg" >> slapos-client.cfg

or 

$ echo "  demoapp http://git.erp5.org/gitweb/slapos.git/blob_plain/refs/heads/cygwin-0:/software/demoapp/software.cfg" >> ~/.slapos/slapos.cfg

$ echo "  nodemanager http://git.erp5.org/gitweb/slapos.git/blob_plain/refs/heads/cygwin-0:/software/slaprunner/software.cfg" >> ~/.slapos/slapos.cfg


$ bin/slapos node register SlapOS-Windows
  Login: jondy
  Password:

$ bin/slapos supply demoapp COMP-1500

$ bin/slapos request mydemoapp demoapp - -node computer_guid=COMP-1500

Wait for a while, otherwise there is no partition assigned

$ bin/slapos node software

$ bin/slapos node instance 

$ bin/slapos node start all
or
$ bin/slapos node start demoapp

$ bin/slapos node restart all

Recreate instance
$ bin/slapos node instance - -only_cp slappart9

$ bin/slapos request mydemoapp demoapp # not this, it request node in the cloud

Now, you can visit the demo in the browser by the url.
Refer to: http://community.slapos.org/wiki/osoe-Lecture.SlapOS.Extended/developer-Installing.SlapOS.Client
</para>
</chapter>
-->

<chapter id="ch_generate_window_installer"><title>Generating windows installer from sources</title>
<para>This chapter describes how to generate windows installer from sources.</para>
<section><title>Setting Up Cygwin</title>
<para>We need Cygwin environment in order to build slapos sources code in the Windows. </para>
<para>Go to <ulink url="http://cygwin.com/">"http://cygwin.com/"</ulink> and click on <ulink url="http://cygwin.com/setup.exe">"Install Cygwin Now!"</ulink>. This will download a GUI installer called setup.exe which can be run to download a complete cygwin installation via the internet. Follow the instructions on each screen to install Cygwin. </para>
<para>The Root Directory for Cygwin (default C:\cygwin) will become / within your Cygwin installation. You must have write access to the parent directory, and any ACLs on the parent directory will determine access to installed files.</para>
<para>By default, setup.exe will install only the packages in the Base category and their dependencies, resulting in a minimal Cygwin installation. We need choose the packages required by SlapOS, see <xref linkend="appendix_cygwin_packages"/>. Since setup.exe automatically selects dependencies, be careful not to unselect any required packages.</para>
<para>Refer to: <ulink url="http://cygwin.com/cygwin-ug-net/setup-net.html"/></para>
<para>Or you can install cygwin by command console, first you need download setup.exe from cygwin.com, save to D:\temp\setup.exe or somewhere else.
<itemizedlist>
<listitem><para>In the Windows destktop, Click Start</para></listitem>
<listitem><para>Click Run, type command: 'cmd', click OK to enter windows console</para></listitem>
<listitem><para>Type the following commands:<programlisting>
    C:\Documents and Settings\Administrator>d:
    D:\>md slapos
    D:\>cd slapos
    D:\slapos>SET PACKAGES=-P autobuild -P autoconf -P automake -P autossh -P binutils -P bison -P bzip2 -P ca-certificates -P cron -P curl -P cygport -P cygrunsrv -P file -P flex -P gcc4 -P gdbm -P libgdbm-devel -P gettext -P gettext-devel -P libglib2.0-devel -P libglib2.0_0 -P libexpat1 -P libexpat1-devel -P libmpfr-devel -P libmpfr4 -P libtool -P libxml2 -P libxml2-devel -P libxslt -P libxslt-devel -P make -P m4 -P libncurses-devel -P libncursesw-devel -P patch -P patchutils -P pkg-config -P python -P python-setuptools -P openssh -P openssl-devel -P libopenssl098 -P libopenssl100 -P popt -P readline -P libsqlite3-devel -P libsqlite3_0 -P swig -P syslog-ng -P zlib-devel -P vim -P wget -P docbook-utils
    D:\slapos>move d:\temp\setup.exe ./
    D:\slapos>setup.exe %PACKAGES% --no-verify -D -L -l D:\slapos\cygwin-packages -R D:\slapos\cygwin -s http://www.netgull.com/cygwin
</programlisting>Waiting for the installer finished.</para></listitem>
</itemizedlist>
A cygwin icon will be added in the windows desktop, click it to enter cygwin box, then run the following commands:
<!--
You can create your script to start Cygwin in a tty terminal
<programlisting>
$ cat &lt;&lt;EOF  &gt; C:/cygwin/cygtty.bat
@echo off

C:
chdir C:\cygwin\bin

start mintty.exe -i /Cygwin-Terminal.ico -
</programlisting>
 -->
<programlisting>
Administrator@JONDY ~
$ echo "export CYGWIN=server" >> ~/.bash_profile
$ sed -i -e "s/4\.3\.4/4.5.3/g" /usr/bin/libtool
$ cp /etc/password /etc/password.orig
$ myaccount=$(grep "^Administrator:" /etc/passwd | \
              sed -e "s/Administrator:unused:500:/root:unused:0:/g")
$ echo $myaccount >> /etc/passwd
$ /usr/bin/cygserver-config --yes
$ /usr/bin/syslog-ng-config --yes
</programlisting>
If you'd like to make the font of command box bigger
<programlisting>
$ cd ~
$ cat &lt;&lt;EOF  &gt; .minttyrc
BoldAsFont=no
Font=Courier New
FontHeight=16
Scrollbar=none
EOF
</programlisting>
Then restart cygwin command box.
</para>
</section>

<section><title>Building SlapOS</title>
<para>Double click the desktop icon "Cygwin" to enter cygwin command box, the following commands are typed in this box.
<programlisting>
$ mkdir /cygdrive/d/slapos/opt
$ cd /
$ ln -s /cygdrive/d/slapos/opt
$ mkdir -p /opt/slapos
$ mkdir -p /opt/download-cache
$ cd /opt/slapos
$ echo "[buildout]
extends = http://git.erp5.org/gitweb/slapos.git/blob_plain/refs/tags/cygwin-0:/component/slapos/buildout.cfg
download-cache = /opt/download-cache
prefix = ${buildout:directory}
" > buildout.cfg 
$ python -S -c 'import urllib2;print urllib2.urlopen("http://git.erp5.org/gitweb/slapos.core.git/blob_plain/HEAD:/bootstrap.py").read()' > bootstrap.py
$ python -S bootstrap.py
$ bin/buildout
</programlisting>
Now we need patch slapos.core for supporting cygwin, after these code are merged, it don't need.
<programlisting>
$ cd /opt
$ wget http://www.dashingsoft.com/products/slapos/slapos-patches.tar.gz
$ tar xzf slapos-patches.tar.gz
$ cd eggs/slapos.core-0.35-py2.7.egg/slapos
$ patch -p1 &lt; /opt/patches/slapos-core.patch
</programlisting>
It seems netifaces.dll need to rebase, 
$ cp /etc/postinstall/autorebase.bat.done /autorebase.bat

Then exit cygwin, double click autorebase.bat in the Windows explorer.
</para>
</section>

<section><title>Generating windows installer</title>

<section><title>Preparing the sources files for installer</title>
<para>Let's we start cygwin box, then clone slapos.package.git
<programlisting>
$ mkdir /opt/git
$ cd /opt/git
$ git clone -b cygwin http://git.erp5.org/repos/slapos.core.git
$ git clone -b cygwin http://git.erp5.org/repos/slapos.package.git
$ cd slapos.package
$ ls -1
babeld
docs
openvpn
scripts
...
</programlisting>
Then build babeld and openvpn for cygwin, we need use the sources in the slapos.package.git, they are patched for cygwin:
<programlisting>
$ cd /opt/git/slapos.package/windows/babeld
# If your os is windows xp, type the following command, otherwise type make only.
$ make WINVER=XP
# check babeld.exe is made
$ ls babeld.exe
$ cp babeld.exe /usr/local/bin

$ cd /opt/git/slapos.package/windows/babeld
$ ac_cv_type_socklen_t=yes IFCONFIG="C:/WINDOWS/system32" LDFLAGS="-liphlpapi -lws2_32" CFLAGS="-DWIN32 -DCYGWIN -D__USE_W32_SOCKETS -D__INSIDE_CYGWIN_NET__ -DWIN32_LEAN_AND_MEAN -D_WIN32_WINNT=0x0503 -g" OPENSSL_CRYPTO_CFLAGS=-I/usr/include OPENSSL_CRYPTO_LIBS="-L/usr/lib -lcrypto" OPENSSL_SSL_CFLAGS=-I/usr/include OPENSSL_SSL_LIBS="-L/usr/lib -lssl" ./configure --disable-lzo --disable-pkcs11 --disable-plugin-auth-pam --disable-plugin-down-root
$ make
# check whether openvpn.exe is made
$ ls -l src/openvpn/.libs/openvpn.exe
$ cp src/openvpn/.libs/openvpn.exe /usr/local/bin
</programlisting>
Then generate user-guide.html from using-slapos-in-windows.xml, it requires xslt and dockbook, make sure these packages installed in the Cygwin
<programlisting>
$ cd /opt/git/slapos.package/windows/docs
# Before run make, be sure there is the file /usr/share/sgml/docbook/xsl-stylesheets/html/docbook.xsl, if not, find it first
$ find /usr -name docbook.xsl
# Then replace the old file name with this one in the Makefile, then run make
$ make
</programlisting>
Download pyOpenSSL-0.13.tar.gz, miniupnpc-1.8.tar.gz, 
<programlisting>
$ mkdir -p /opt/downloads
$ cd /opt/downloads
$ wget https://pypi.python.org/packages/source/p/pyOpenSSL/pyOpenSSL-0.13.tar.gz#md5=767bca18a71178ca353dff9e10941929
$ wget http://miniupnp.free.fr/files/download.php?file=miniupnpc-1.8.tar.gz
</programlisting>
Get re6stnet for cygwin
<programlisting>
$ cd /opt/git
$ git clone -b cygwin http://git.erp5.org/repos/re6stnet.git
$ cd re6stnet
$ python setup.py sdist
</programlisting>
Get the icons and openvpn drivers
<programlisting>
$ cd /opt/git
$ wget http://www.dashingsoft.com/products/slapos/images.tar.gz
$ wget http://www.dashingsoft.com/products/slapos/openvpn-driver.tar.gz
$ tar xzf images.tar.gz
$ tar openvpn-driver.tar.gz
</programlisting>
</para>
</section>

<section><title>Making installer</title>
<para>We use Inno-Setup sripts to genarate microsoft installer, so we need install inno setup first. You can download the installer from <ulink url="http://www.innosetup.com"/>, then install inno-setup in you computer</para>
<para>Then click Start -> Inno Setup 5 -> Inno Setup Compiler, to open inno setup.</para>
<para>In the inno setup window, click File -> Open, select the script: /opt/git/slapos.package/windows/scripts/slapos-all-in-one.iss</para>
<para>In the section "Setup", there are some options:
<itemizedlist>
<listitem><para>OutputDir: the generated installer will be saved here</para></listitem>
<listitem><para>OutputBaseFilename: the prefix of output installer</para></listitem>
<listitem><para>SourceDir: it's a very important option. It's the root path of all the relative path in the section "Files"</para></listitem>
</itemizedlist>
In the section "Files", to be sure all the source files are exsiting in your computer, for example
<programlisting>
Source: "images\slapos.ico"; DestDir: "{app}\cygwin\etc\slapos\images";
</programlisting>
Assum SourceDir in the section "Setup" is "D:\slapos", the builder will find "D:\slapos\images\slapos.ico" as the source, so this file should be exsited.
</para>
<para>Click menu Build -> Compile, then wait for the building process finished. You can check the installer in the OutputDir.</para>
<para>There is another script "slapos.iss", it used to build network installer. All-in-one installer will include all the files, so no internet access required. However network installer need internet connection to download the files and packages. It's remarkable smaller than all-in-one installer.</para>
</section>

<!--
<section><title>IPv6 Support</title>
<para>If native IPv6 is available, skip this section. Otherwise be sure you have installed IPv6 by the command:
<programlisting>$ netsh interface ipv6 install</programlisting>
</para>
<para>Download openvpn windows installer, for example, openvpn-2.2.1-install.exe, then install openvpn. By default, it installed at <filename>C:\Program Files\OpenVPN</filename></para>
<para>Copy required files of openvpn to /opt/openvpn and edit client.ovpn
<programlisting>
$ mkdir -p /opt/openvpn
$ cd /opt/openvpn
$ cp "C:/Program Files/OpenVPN/bin/*" /opt/openvpn
$ cp -a "C:/Program Files/OpenVPN/config" /opt/openvpn
$ chmod 755 *.exe
$ cd config
$ wget http://www.slapos.org/vifib-ca.crt/getData  -O ca.crt
$ http://www.slapos.org/vifib-client.crt/getData -O client-vifib.crt
$ wget http://www.slapos.org/vifib-client.key/getData -O client-vifib.key
$ mv client.ovpn vifib.ovpn
$ vi vifib.ovpn
# Edit the following options
dev tap
proto tcp
remote 176.31.103.87 443
ca ca.crt
cert client-vifib.crt
key client-vifib.key
</programlisting>
re6stnet configure or teredo.
</para>
</section>

<section><title>Run slapformat</title>
<para>Assume we have registered a server which id is 'COMP-161', and saved its key and certificate files in the home directory. So we can use script 'configure.sh' to do all the configuration.
<programlisting>
$ mkdir -p /etc/slapos/ssl
$ mkdir -p /etc/slapos/ssl/partition_pki
$ cd /
$ wget http://git.erp5.org/gitweb/slapos.git/blob_plain/refs/tags/cygwin:/component/cygwin/configure.sh 
$ /configure.sh COMP-161 ~/computer.key ~/computer.crt
</programlisting>
</para>
<para>Finally, run slapformat
<programlisting>
$ cd /opt/slapos
$ bin/slapformat -c - -now /etc/slapos/slapos.cfg
</programlisting>
</para>
</section>
-->
</section>
</chapter>

<!-- 
A.	
To install the IPv6 protocol for Windows XP with SP2 or later, do the following:

Log on to the computer with a user account that has privileges to change network configuration.
Click Start, click Control Panel, and then double-click Network Connections.
Right-click any local area connection, and then click Properties.
Click Install.
In the Select Network Component Type dialog box, click Protocol, and then click Add.
In the Select Network Protocol dialog box, click Microsoft TCP/IP version 6, and then click OK.
Click Close to save changes to your network connection.


Alternately, from the Windows XP desktop, click Start, point to Programs, point to Accessories, and then click Command Prompt. At the command prompt, type netsh interface ipv6 install.

 For the IPv6 protocol for Windows XP with SP1, do the following:

Log on to the computer with a user account that has privileges to change network configuration.
Click Start, click Control Panel, and then double-click Network Connections.
Right-click any local area connection, and then click Properties.
Click Install.
In the Select Network Component Type dialog box, click Protocol, and then click Add.
In the Select Network Protocol dialog box, click Microsoft IPv6 Developer Edition, and then click OK.
Click Close to save changes to your network connection.


Alternately, from the Windows XP desktop, click Start, point to Programs, point to Accessories, and then click Command Prompt. At the command prompt, type netsh interface ipv6 install.

To install the IPv6 protocol for Windows XP with no service packs installed:

Log on to the computer running Windows XP with a user account that has privileges to change network configuration.
Open a command prompt. From the Windows XP desktop, click Start, point to Programs, point to Accessories, and then click Command Prompt.
At the command prompt, type ipv6 install.


Regardless of the version of Windows XP, to use RPC applications over IPv6, you must first restart the computer.


Q. How can I tell if the IPv6 protocol is installed for Windows XP with no service packs installed? It does not appear in the list of protocols in Network Connections. A.	The installation of the IPv6 Protocol for Windows XP with no service packs installed does not use the standard procedure for protocol installation in the Network Connections folder. Therefore, it is not visible as an installed protocol. To determine whether IPv6 is installed, type ipv6 if at a command prompt. If IPv6 is installed, you will see a display of your IPv6 interfaces and their configuration. Otherwise, the Ipv6.exe tool will indicate that IPv6 is not installed.
 -->
<appendix id="appendix_cygwin_packages"><title>Cygwin Required Packages List</title>
<para>The following packages are requied by SlapOS Node
<itemizedlist>
<listitem><para>Devel/autobuild</para></listitem>
<listitem><para>Devel/autoconf</para></listitem>
<listitem><para>Devel/automake</para></listitem>
<listitem><para>Net/autossh</para></listitem>
<listitem><para>Devel/binutils</para></listitem>
<listitem><para>Devel/bison</para></listitem>
<listitem><para>Utils/bzip2<superscript></superscript></para></listitem>
<listitem><para>Net/ca-certificates</para></listitem>
<listitem><para>Admin/cron</para></listitem>
<listitem><para>Devel/cygport</para></listitem>
<listitem><para>Admin/cygrunsrv</para></listitem>
<listitem><para>Utils/file<superscript>*</superscript></para></listitem>
<listitem><para>Devel/flex</para></listitem>
<listitem><para>Devel/gcc4</para></listitem>
<listitem><para>Utils/gdbm</para></listitem>
<listitem><para>Devel/libgdbm-devel</para></listitem>
<listitem><para>Devel/gettext<superscript>*</superscript></para></listitem>
<listitem><para>Devel/gettext-devel</para></listitem>
<listitem><para>Devel/git</para></listitem>
<listitem><para>GNOME/libglib2.0-devel</para></listitem>
<listitem><para>GNOME/libglib2.0_0</para></listitem>
<listitem><para>Libs/libexpat1</para></listitem>
<listitem><para>Libs/libexpat1-devel</para></listitem>
<listitem><para>Libs/libmpfr-devel</para></listitem>
<listitem><para>Libs/libmpfr4</para></listitem>
<listitem><para>Libs/libsqlite3-devel</para></listitem>
<listitem><para>Libs/libsqlite3_0</para></listitem>
<listitem><para>Devel/libtool</para></listitem>
<listitem><para>Libs/libxml2</para></listitem>
<listitem><para>Libs/libxml2-devel</para></listitem>
<listitem><para>Libs/libxslt</para></listitem>
<listitem><para>Libs/libxslt-devel</para></listitem>
<listitem><para>Devel/make</para></listitem>
<listitem><para>Interpreters/m4</para></listitem>
<listitem><para>Devel/libncurses-devel</para></listitem>
<listitem><para>Devel/libncursesw-devel</para></listitem>
<listitem><para>Utils/patch</para></listitem>
<listitem><para>Utils/patchutils</para></listitem>
<listitem><para>Devel/pkg-config</para></listitem>
<listitem><para>Python/python<superscript>2.7</superscript></para></listitem>
<listitem><para>Python/python-openssl</para></listitem>
<listitem><para>Python/python-setuptools</para></listitem>
<listitem><para>Net/openssh</para></listitem>
<listitem><para>Devel/openssl-devel</para></listitem>
<listitem><para>Libs/libopenssl098</para></listitem>
<listitem><para>Libs/libopenssl100</para></listitem>
<listitem><para>Libs/popt</para></listitem>
<listitem><para>Devel/readline<superscript>*</superscript></para></listitem>
<listitem><para>Database/sqlite3</para></listitem>
<listitem><para>Devel/swig</para></listitem>
<listitem><para>Admin/syslog-ng</para></listitem>
<listitem><para>Devel/zlib-devel</para></listitem>
<listitem><para>Editor/vim</para></listitem>
<listitem><para>Web/wget</para></listitem>
</itemizedlist>
</para>
<para>
The following packages are requied by re6stnet
<itemizedlist>
<listitem><para>openvpn<superscript>#</superscript></para></listitem>
<listitem><para>babeld<superscript>#</superscript></para></listitem>
</itemizedlist>
</para>
<para>The following packages are requied by wamp
<itemizedlist>
<listitem><para>Web/apache2</para></listitem>
<listitem><para>Web/apache2-devel</para></listitem>
<listitem><para>apache2-php<superscript>#</superscript></para></listitem>
<listitem><para>Devel/cmake</para></listitem>
<listitem><para>Admin/cron</para></listitem>
<listitem><para>Admin/cygrunsrv</para></listitem>
<listitem><para>Net/curl</para></listitem>
<listitem><para>Libs/libbz2-devel</para></listitem>
<listitem><para>Net/libcurl-devel</para></listitem>
<listitem><para>Text/libenchant-devel</para></listitem>
<listitem><para>Text/libenchant1</para></listitem>
<listitem><para>X11/libfreetype-devel</para></listitem>
<listitem><para>X11/libfreetype6</para></listitem>
<listitem><para>Devel/libjpeg-devel</para></listitem>
<listitem><para>Libs/libjpeg8</para></listitem>
<listitem><para>Devel/libpng-devel</para></listitem>
<listitem><para>Libs/libpng15</para></listitem>
<listitem><para>X11/libXpm-devel</para></listitem>
<listitem><para>X11/libXpm4</para></listitem>
<listitem><para>dropbear<superscript>#</superscript></para></listitem>
<listitem><para>logrotate<superscript>#</superscript></para></listitem>
<listitem><para>mariadb<superscript>#</superscript></para></listitem>
<listitem><para>Utils/rdiff-backup</para></listitem>
<listitem><para>Net/stunnel</para></listitem>
</itemizedlist>
'*' means it's default package of cygwin, '#' means it need to build by myself, '?' means maybe it's not required.
</para>
</appendix>
</book>

