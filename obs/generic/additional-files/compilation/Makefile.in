
# This macros are replaced by build-scripts/template_stage.sh
# according to the values and regular expressions defined in
# build-scripts/configuration_information.sh
TARGET_DIR = %TARGET_DIR%
TARBALL_DIR = $(shell pwd)
BUILD_DIR = $(TARBALL_DIR)/build
INSTALL_DIR = $(DESTDIR)$(TARGET_DIR)
RUN_BUILDOUT_DIR = $(BUILD_DIR)$(TARGET_DIR)
# get the path of the BUILD_DIR of the first build (performed to prepare the cache for OBS)
OLD_TARBALL_DIR := $(shell cat local_tarball_directory_path)

build:
	@echo "Fixing buildout path to $(TARBALL_DIR) rather than $(OLD_TARBALL_DIR) for buildout"
	cd "$(RUN_BUILDOUT_DIR)"; sed -i 's#$(OLD_TARBALL_DIR)#$(TARBALL_DIR)#g' buildout.cfg bin/*
	cd "$(RUN_BUILDOUT_DIR)" && ./bin/buildout -v

	@touch clean-stamp

clean: clean-stamp
clean-stamp:
	rm -rf "$(BUILD_DIR)"

install: build
	mkdir -p "$(INSTALL_DIR)/bin"
	mkdir -p "$(INSTALL_DIR)/etc"
	mkdir -p "$(INSTALL_DIR)/include"
	mkdir -p "$(INSTALL_DIR)/lib"
	mkdir -p "$(INSTALL_DIR)/sbin"
	mkdir -p "$(INSTALL_DIR)/share"
	# no "-r" option to "cp" because there must not be subdirectories in /bin
	# https://refspecs.linuxfoundation.org/FHS_3.0/fhs/ch04s04.html
	# https://refspecs.linuxfoundation.org/FHS_3.0/fhs/ch03s13.html
	-cp "$(RUN_BUILDOUT_DIR)/parts/lunzip/bin/"* "$(INSTALL_DIR)/bin"
	-cp -r "$(RUN_BUILDOUT_DIR)/parts/"*/etc/* "$(INSTALL_DIR)/etc"
	-cp -r "$(RUN_BUILDOUT_DIR)/parts/"*/include/* "$(INSTALL_DIR)/include"
	-cp -r "$(RUN_BUILDOUT_DIR)/parts/"*/lib/* "$(INSTALL_DIR)/lib"
	-cp -r "$(RUN_BUILDOUT_DIR)/parts/"*/sbin/* "$(INSTALL_DIR)/sbin"
	-cp -r "$(RUN_BUILDOUT_DIR)/parts/"*/share/* "$(INSTALL_DIR)/share"

	rm -f clean-stamp

.PHONY: build install clean
