
PY = $(PYTHON)
# This macros are replaced by build-scripts/template_stage.sh
# according to the values and regular expressions defined in
# build-scripts/configuration_information.sh
TARGET_DIR = %TARGET_DIR%
TARBALL_DIR = $(shell pwd)
BUILD_DIR = $(TARBALL_DIR)/build
INSTALL_DIR = $(DESTDIR)$(TARGET_DIR)
RUN_BUILDOUT_DIR = $(BUILD_DIR)$(TARGET_DIR)
# get the path of the BUILD_DIR of the first build (performed to prepare the cache for OBS)
OLD_TARBALL_DIR := $(shell cat local_build_directory)


all: build

build: build-stamp
build-stamp:
	@echo "Fixing buildout path to $(TARBALL_DIR) rather than $(OLD_TARBALL_DIR) for buildout"
	cd $(RUN_BUILDOUT_DIR); sed -i 's#$(OLD_TARBALL_DIR)#$(TARBALL_DIR)#g' buildout.cfg bin/*
	echo RUN_BUILDOUT_DIR = $(RUN_BUILDOUT_DIR) \; PY = $(PY)
	cd $(RUN_BUILDOUT_DIR) && \
		$(PY) ./bin/buildout -v

	@touch build-stamp

clean:
	rm -rf $(BUILD_DIR)
	rm -f *-stamp

install: all
	mkdir -p $(INSTALL_DIR)/bin
	mkdir -p $(INSTALL_DIR)/sbin/
	mkdir -p $(INSTALL_DIR)/etc/
	mkdir -p $(INSTALL_DIR)/lib/
	mkdir -p $(INSTALL_DIR)/share/
	-cp -r $(RUN_BUILDOUT_DIR)/parts/lunzip/bin/* $(INSTALL_DIR)/bin/
	-cp -r $(RUN_BUILDOUT_DIR)/parts/lunzip/sbin/* $(INSTALL_DIR)/sbin/
	-cp -r $(RUN_BUILDOUT_DIR)/parts/lunzip/etc/* $(INSTALL_DIR)/etc/
	-cp -r $(RUN_BUILDOUT_DIR)/parts/lunzip/lib/* $(INSTALL_DIR)/lib/
	-cp -r $(RUN_BUILDOUT_DIR)/parts/lunzip/share/* $(INSTALL_DIR)/share/

.PHONY: build all clean install
