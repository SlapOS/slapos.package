
  - include: uploadlog.yml
    when: is_playbook_ok == "False"

  - include: rerun.yml
    when: is_playbook_ok == "False"

  - name: Create /etc/opt dir
    file: dest=/etc/opt mode=775 state=directory

  - name: Download configuration
    get_url: url=http://10.0.2.100/netconfig.sh dest=/etc/opt/netconfig.sh mode=755
    ignore_errors: True

  - name: stat /etc/opt/netconfig.sh
    stat: path=/etc/opt/netconfig.sh
    register: netconfig_file

  - name: replace /etc/rc.local
    copy: src=/etc/opt/netconfig.sh dest=/etc/rc.local mode=755
    when: netconfig_file.stat.exists == True

  - name: call netconfig.sh
    command: /etc/opt/netconfig.sh 
    when: netconfig_file.stat.exists == True
    ignore_errors: True

  - name: Download cluster.hash
    get_url: url=http://10.0.2.100/cluster.hash dest=/etc/opt/cluster.hash mode=644
    ignore_errors: True

  - name: stat cluster.hash
    stat: path=/etc/opt/cluster.hash
    register: cluster_hash

  - name: get upgrade file if exists
    shell: wget --no-check-certificate "{{ lookup('file', '/etc/opt/cluster.hash') }}/data" -O /etc/opt/upgrade.after
    when: cluster_hash.stat.exists == True
    ignore_errors: True

  - name: stat file upgrade.after
    stat: path=/etc/opt/upgrade.after
    register: upgrade_set

  - name: check if the plabook should be upgraded
    shell: cat /etc/opt/upgrade.after
    register: upgrade_time
    when: upgrade_set.stat.exists == True

  - include: network.yml
  - include: hostname.yml
  - include: user.yml
  - include: sudo.yml
    when: is_playbook_ok == "False"
  - include: ssh.yml

  - file: path=/opt/upgrader state=directory 

  - stat: path=/opt/upgrader/last-upgrade
    register: last_upgrade

  - shell: echo 1 > /opt/upgrader/last-upgrade
    when: last_upgrade.stat.exists == False

  - include: upgrader.yml upgrade_after={{ upgrade_time.stdout }}
    when: upgrade_set.stat.exists == True and (upgrade_time.stdout|int > lookup('file', '/opt/upgrader/last-upgrade')|int)
