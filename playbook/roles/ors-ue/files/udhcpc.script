#!/bin/sh
# Busybox udhcpc dispatcher script.
# Copyright (C) 2009 by Axel Beckert.
# Copyright (C) 2014 by Michael Tokarev.
#
# Based on the busybox example scripts and the old udhcp source
# package default.* scripts.

RESOLV_CONF="/etc/resolv.conf"

log() {
    logger -t "udhcpc[$PPID]" -p daemon.$1 "$interface: $2"
}

case $1 in
    bound|renew)

	# Configure new IP address.
	# Do it unconditionally even if the address hasn't changed,
	# to also set subnet, broadcast, mtu, ...
	busybox ifconfig $interface ${mtu:+mtu $mtu} \
	    $ip netmask $subnet ${broadcast:+broadcast $broadcast}

	# get current ("old") routes (after setting new IP)
	crouter=$(busybox ip -4 route show dev $interface |
	          busybox awk '$1 == "default" { print $3; }')
	router="${router%% *}" # linux kernel supports only one (default) route
	if [ ".$router" != ".$crouter" ]; then
	    # reset just default routes
	    busybox ip -4 route flush exact 0.0.0.0/0 dev $interface
	fi
	if [ -n "$router" ]; then
	    # special case for /32 subnets: use onlink keyword
	    [ ".$subnet" = .255.255.255.255 ] \
		    && onlink=onlink || onlink=
	    busybox ip -4 route add default via $router dev $interface $onlink
	fi

	# Update resolver configuration file
	[ -n "$domain" ] && R="domain $domain" || R=""
	for i in $dns; do
	    R="$R
nameserver $i"
	done

	if [ -x /sbin/resolvconf ]; then
	    echo "$R" | resolvconf -a "$interface.udhcpc"
	else
	    echo "$R" > "$RESOLV_CONF"
	fi

	log info "$1: IP=$ip/$subnet router=$router domain=\"$domain\" dns=\"$dns\" lease=$lease"
	;;

    deconfig)
	busybox ip link set $interface up
  for _ip in $(busybox ip -o -4 a show dev $interface | busybox sed -n 's/.*inet \([0-9.]*\/[0-9]*\) .*/\1/gp') ; do
    if [ $_ip != 10.2.0.1/24 ] ; then
      ip -4 a del $i dev $interface
    fi
  done
  for _route in $(busybox ip -4 -o r show | busybox sed -n 's/\(.* dev '$interface'\).*/\1/gp') ; do
    if echo $_route | grep -qv 10.2.0 ; then
      ip -4 r del $_route
    fi
  done

	[ -x /sbin/resolvconf ] &&
	    resolvconf -d "$interface.udhcpc"
	log notice "deconfigured"
	;;

    leasefail | nak)
	log err "configuration failed: $1: $message"
	;;

    *)
	echo "$0: Unknown udhcpc command: $1" >&2
	exit 1
	;;
esac
